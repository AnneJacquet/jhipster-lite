import type { AuthenticatedUser } from '@/auth/domain/AuthenticatedUser';
import type { KeycloakHttp } from '@/auth/infrastructure/secondary/KeycloakHttp';
import type { MockedFunction } from 'vitest';
import { vi } from 'vitest';

export interface KeycloakHttpStub extends KeycloakHttp {
  currentUser: MockedFunction<any>;
  login: MockedFunction<any>;
  logout: MockedFunction<any>;
  authenticated: MockedFunction<any>;
  refreshToken: MockedFunction<any>;
  getKeycloakInstance: MockedFunction<any>;
}

export const stubKeycloakHttp = (): KeycloakHttpStub =>
  ({
    currentUser: vi.fn(),
    login: vi.fn(),
    logout: vi.fn(),
    authenticated: vi.fn(),
    refreshToken: vi.fn(),
    getKeycloakInstance: vi.fn(),
  }) as KeycloakHttpStub;

export const fakeAuthenticatedUser = (): AuthenticatedUser => ({
  isAuthenticated: true,
  username: 'testuser',
  token: 'test-token',
});
