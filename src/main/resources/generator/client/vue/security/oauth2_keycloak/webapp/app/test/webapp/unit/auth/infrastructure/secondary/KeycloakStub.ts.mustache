import type Keycloak from 'keycloak-js';
import type { MockedFunction } from 'vitest';
import { vi } from 'vitest';

export interface KeycloakStub extends Keycloak {
  init: MockedFunction<any>;
  login: MockedFunction<any>;
  logout: MockedFunction<any>;
  register: MockedFunction<any>;
  accountManagement: MockedFunction<any>;
  updateToken: MockedFunction<any>;
  clearToken: MockedFunction<any>;
  hasRealmRole: MockedFunction<any>;
  hasResourceRole: MockedFunction<any>;
  loadUserProfile: MockedFunction<any>;
  loadUserInfo: MockedFunction<any>;
  authenticated?: boolean;
  token?: string;
  tokenParsed?: { preferred_username?: string };
}

export const stubKeycloak = (): KeycloakStub =>
  ({
    init: vi.fn(),
    login: vi.fn(),
    logout: vi.fn(),
    register: vi.fn(),
    accountManagement: vi.fn(),
    updateToken: vi.fn(),
    clearToken: vi.fn(),
    hasRealmRole: vi.fn(),
    hasResourceRole: vi.fn(),
    loadUserProfile: vi.fn(),
    loadUserInfo: vi.fn(),
    authenticated: false,
    token: undefined,
    tokenParsed: undefined,
  }) as KeycloakStub;
